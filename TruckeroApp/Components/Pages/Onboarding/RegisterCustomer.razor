@page "/registercustomer"
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations
@using Truckero.Core.DTOs.Auth
@using Truckero.Core.DataAnnotations
@using Truckero.Core.Interfaces.Services
@using TruckeroApp.ServiceClients

@inject IOnboardingService OnboardingService
@inject NavigationManager NavigationManager

<CenterWrapper>
    <div id="registration-screen" class="p-6 min-h-screen">
        <div id="registration-header" class="flex items-center mb-8">
            <button class="text-gray-600" @onclick="NavigateBack">
                <i class="fa-solid fa-arrow-left text-xl"></i>
            </button>
            <div class="text-center flex-1 mr-8">
                <h2 class="text-xl font-semibold">Customer Registration</h2>
            </div>
        </div>

        <div id="role-indicator" class="bg-[#FFF3E0] p-3 rounded-lg mb-6 flex items-center">
            <i class="fa-solid fa-box text-[#FF6B00] mr-3"></i>
            <span class="text-sm text-[#FF6B00]">Registering as: <strong>CUSTOMER</strong></span>
        </div>

        <EditForm Model="@CustomerProfile" OnValidSubmit="SubmitAsync" id="registration-form" class="space-y-4">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-red-500 text-sm mb-4" />

            <div id="personal-info-section" class="space-y-4">
                <div class="space-y-2">
                    <label class="block text-sm font-medium text-gray-700">Full Name</label>
                    <InputText @bind-Value="CustomerProfile.FullName" class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500" placeholder="Enter your full name" />
                    <ValidationMessage For="@(() => CustomerProfile.FullName)" class="text-red-500 text-xs" />
                </div>

                <div class="space-y-2">
                    <label class="block text-sm font-medium text-gray-700">Email Address</label>
                    <InputText @bind-Value="CustomerProfile.Email" type="email" class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500" placeholder="Enter your email address" />
                    <ValidationMessage For="@(() => CustomerProfile.Email)" class="text-red-500 text-xs" />
                </div>

                <div class="space-y-2">
                    <label class="block text-sm font-medium text-gray-700">Phone Number</label>
                    <InputText @bind-Value="CustomerProfile.PhoneNumber" type="tel" class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500" placeholder="Enter your phone number" />
                    <ValidationMessage For="@(() => CustomerProfile.PhoneNumber)" class="text-red-500 text-xs" />
                </div>
            </div>

            <div id="password-section" class="space-y-4 mt-6">
                <div class="space-y-2">
                    <label class="block text-sm font-medium text-gray-700">Password</label>
                    <div class="relative">
                        <InputText @bind-Value="Password" type="@(ShowPassword ? "text" : "password")" class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500" placeholder="Create password" />
                        <button type="button" @onclick="TogglePasswordVisibility" class="absolute right-3 top-3 text-gray-400">
                            <i class="fa-regular @(ShowPassword ? "fa-eye-slash" : "fa-eye") text-lg"></i>
                        </button>
                    </div>
                    <p class="text-xs text-gray-500 mt-1">Must be at least 8 characters long</p>
                    <ValidationMessage For="@(() => Password)" class="text-red-500 text-xs" />
                </div>

                <div class="space-y-2">
                    <label class="block text-sm font-medium text-gray-700">Confirm Password</label>
                    <div class="relative">
                        <InputText @bind-Value="ConfirmPassword" type="@(ShowConfirmPassword ? "text" : "password")" class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500" placeholder="Confirm password" />
                        <button type="button" @onclick="ToggleConfirmPasswordVisibility" class="absolute right-3 top-3 text-gray-400">
                            <i class="fa-regular @(ShowConfirmPassword ? "fa-eye-slash" : "fa-eye") text-lg"></i>
                        </button>
                    </div>
                    <ValidationMessage For="@(() => ConfirmPassword)" class="text-red-500 text-xs" />
                </div>
            </div>

            <div id="payment-section" class="mt-6 border-2 border-dashed border-[#DDDDDD] rounded-lg p-4" @onclick="AddPaymentMethod">
                <div class="flex items-center justify-between mb-2">
                    <div class="flex items-center space-x-2">
                        <i class="fa-solid fa-credit-card text-[#444444]"></i>
                        <span class="font-medium text-[#444444]">Add Payment Method</span>
                    </div>
                    <i class="fa-solid fa-chevron-right text-[#444444]"></i>
                </div>
                <p class="text-sm text-[#444444]">You'll only be charged when booking a trip</p>
            </div>

            <div class="flex items-start space-x-3 mt-6">
                <InputCheckbox @bind-Value="AcceptTerms" id="terms" class="mt-1 h-4 w-4 rounded border-gray-300 text-[#FF6B00] focus:ring-[#FF6B00]" />
                <label for="terms" class="text-xs text-gray-600">
                    I agree to Truckeo's <span class="text-[#FF6B00] cursor-pointer" @onclick="ShowTermsOfService">Terms of Service</span> and <span class="text-[#FF6B00] cursor-pointer" @onclick="ShowPrivacyPolicy">Privacy Policy</span>
                </label>
            </div>

            @if (FormSubmitted && !AcceptTerms)
            {
                <div class="text-red-500 text-xs">
                    You must accept the terms and conditions to continue
                </div>
            }


            <button type="submit" class="w-full bg-[#FF6B00] text-white py-3 rounded-lg font-medium hover:bg-[#E65C00] mt-6 @(IsLoading ? "opacity-70 cursor-not-allowed" : "")" disabled="@IsLoading">
                
@if
 
(
IsLoading
)

                
{

                    
<
span
>
Processing...
</
span
>

                
}

                
else

                
{

                    
<
span
>
Create Account
</
span
>

                
}

            </button>

            <div class="relative my-6">
                <div class="absolute inset-0 flex items-center">
                    <div class="w-full border-t border-gray-300"></div>
                </div>
                <div class="relative flex justify-center text-sm">
                    <span class="px-2 bg-gray-50 text-gray-500">Or continue with</span>
                </div>
            </div>

            <div class="grid grid-cols-2 gap-4">
                <button type="button" @onclick="SignInWithGoogle" class="flex items-center justify-center px-4 py-3 border border-[#CCCCCC] rounded-lg bg-white hover:bg-gray-50">
                    <i class="fa-brands fa-google text-xl" style="color: #4285F4;"></i>
                    <span class="ml-2 text-gray-700">Google</span>
                </button>
                <button type="button" @onclick="SignInWithFacebook" class="flex items-center justify-center px-4 py-3 border border-[#CCCCCC] rounded-lg bg-white hover:bg-gray-50">
                    <i class="fa-brands fa-facebook text-xl" style="color: #1877F2;"></i>
                    <span class="ml-2 text-gray-700">Facebook</span>
                </button>
            </div>

            <p class="text-sm text-center text-gray-600 mt-6">
                Already have an account? <span class="text-[#FF6B00] font-medium cursor-pointer" @onclick="NavigateToLogin">Log In</span>
            </p>
        </EditForm>
    </div>
</CenterWrapper>

@code {

    private CustomerProfileRequest CustomerProfile { get; set; } = new CustomerProfileRequest();

    [Required]
    [MinLength(8, ErrorMessage = "Password must be at least 8 characters long")]
    private string Password { get; set; } = string.Empty;

    [Required]
    [Compare(nameof(Password), ErrorMessage = "Passwords do not match")]
    [StrongPassword(ErrorMessage = "Must include upper, lower, digit, and symbol")]
    private string ConfirmPassword { get; set; } = string.Empty;

    private bool AcceptTerms { get; set; } = false;
    private bool FormSubmitted { get; set; } = false;
    private bool IsLoading { get; set; } = false;
    private bool ShowPassword { get; set; } = false;
    private bool ShowConfirmPassword { get; set; } = false;
    private bool HasPaymentMethod { get; set; } = false;

    private async Task SubmitAsync()
    {
        FormSubmitted = true;

        if (!AcceptTerms)
            return;

        IsLoading = true;

        try
        {
            var completeProfile = new CustomerOnboardingRequest
                {
                    FullName = CustomerProfile.FullName,
                    Email = CustomerProfile.Email,
                    PhoneNumber = CustomerProfile.PhoneNumber,
                    Password = Password,
                    HasPaymentMethod = HasPaymentMethod
                };

            await OnboardingService.CompleteCustomerOnboarding(completeProfile);

            NavigationManager.NavigateTo("/customer/dashboard");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error submitting profile: {ex.Message}");
            // Optionally show error UI
        }
        finally
        {
            IsLoading = false;
        }
    }

    private void NavigateBack()
    {
        NavigationManager.NavigateTo("/register");
    }

    private void NavigateToLogin()
    {
        NavigationManager.NavigateTo("/login");
    }

    private void TogglePasswordVisibility()
    {
        ShowPassword = !ShowPassword;
    }

    private void ToggleConfirmPasswordVisibility()
    {
        ShowConfirmPassword = !ShowConfirmPassword;
    }

    private void AddPaymentMethod()
    {
        // In a real application, this would navigate to a payment information page
        // or open a modal to collect payment details
        NavigationManager.NavigateTo("/customer/payment/add");
    }

    private void ShowTermsOfService()
    {
        // Open terms of service modal or navigate to terms page
    }

    private void ShowPrivacyPolicy()
    {
        // Open privacy policy modal or navigate to privacy page
    }

    private void SignInWithGoogle()
    {
        // Implement Google authentication
    }

    private void SignInWithFacebook()
    {
        // Implement Facebook authentication
    }
}
