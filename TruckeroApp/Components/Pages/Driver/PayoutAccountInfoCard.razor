@using Truckero.Core.DTOs.Onboarding
@using Truckero.Core.DTOs.PayoutAccount
@using Truckero.Core.Extensions

@code {
    [Parameter]
    public PayoutAccountRequest PayoutAccount { get; set; } = new();

    [Parameter]
    public IEnumerable<PaymentMethodType> PaymentMethodTypes { get; set; } = Enumerable.Empty<PaymentMethodType>();

    [Parameter]
    public EventCallback<PayoutAccountRequest> OnEdit { get; set; }

    [Parameter]
    public EventCallback<PayoutAccountRequest> OnRemove { get; set; }

    private Task Edit() => OnEdit.InvokeAsync(PayoutAccount);
    private Task Remove() => OnRemove.InvokeAsync(PayoutAccount);
}

<div class="bg-white rounded-lg border border-gray-200 p-4">
    <div class="flex items-center justify-between">
        <div class="flex items-center space-x-3">
            <i class="fa-solid fa-wallet text-gray-600"></i>
            <div>
                <h4 class="font-medium">@PaymentMethodTypes.GetNameById(PayoutAccount.PaymentMethodTypeId)</h4>
                <p class="text-sm text-gray-500">@PayoutAccount.AccountNumberLast4</p>
            </div>
        </div>
        <div class="flex items-center space-x-3">
            @if (PayoutAccount.IsDefault)
            {
                <i class="fa-solid fa-circle-check text-green-500" title="Default"></i>
            }
            <button type="button" @onclick="Edit" class="text-gray-400 hover:text-gray-600">
                <i class="fa-solid fa-pen-to-square"></i>
            </button>
            <button type="button" @onclick="Remove" class="text-gray-400 hover:text-red-500">
                <i class="fa-solid fa-trash"></i>
            </button>
        </div>
    </div>
</div>
